// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  PENDING
  ACTIVE
  SUSPENDED
  BLOCKED
  DELETED
}

model User {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  username  String     @unique
  password  String
  email     String     @unique
  name      String
  role      String
  status    UserStatus
  isDeleted Boolean    @default(false)

  ip       String
  roles    Role?         @relation(fields: [name], references: [name])
  sessions UserSession[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  permissions String[] // Store permission directly as an array of strings (Example: ["read:user", "create:order"])
  users       User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserSession {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  userId String   @unique @db.ObjectId
  tokens  String[]
  status String
  user   User?    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
